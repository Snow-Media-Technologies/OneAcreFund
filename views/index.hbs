<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">{{#if selectedGenre}}{{selectedGenre}}{{else}}All{{/if}} Movies <i data-feather="loader"
            class="spin hidden" id="spinner"></i></h1>
</div>

<div class="table-responsive">
    <div id="genres" class="ml-3 mb-3"></div>
    <table class="table table-striped table-sm" id="movie-table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Genres</th>
                <th>Average Ratings</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div id="specific-movie">
        <div class="col-md-6">
            <ul class="list-group"></ul>
        </div>
    </div>
</div>

<script>
    //get genre from the server-side render
    let selectedGenre = '{{selectedGenre}}';
    let movieUniqueId = '{{movieId}}';
    let url = selectedGenre ? `/rest/movies/byGenre/${selectedGenre}` : (movieUniqueId.length >0) ? `/rest/movie/${movieUniqueId}`: "/rest/movies/all";
    const path = window.location.pathname;
    const splitPath = path.split('/').splice(1, 2);
    if (splitPath[0] === 'movie') {
        $("#specific-movie").css({ display: 'block' });
        $("#movie-table").css({display: 'none'});
        $(window).on('load', findSpecicMovie(splitPath[1]));
    }
    else{
      $(window).on('load',()=>{
       $("#movie-table").css({display: 'block'});
      });
      
    }

    //call REST service and render table
    $(document).ready(function () {
        $('#spinner').removeClass('hidden');
        $.ajax(
            url,
            {
                success: (movies, textStatus, jqXHR) => {
                    // hide tablle
                    let tbody = $('#movie-table tbody');
                    tbody.empty();
                    if (movies && movies.length) {
                        movies.forEach(movie => {
                            tbody.append(`<tr>
                                <td data-attr=${movie.movieId}>
                                    <a href="/movie/${movie.movieId}">
                                        ${movie.title}
                                    </a>
                                    </td>
                                <td>
                                ${movie.genres.map(item => `<span class="badge badge-${checkGenreType(item)}">${item}</span>`).join(' ')}
                              </td>
                              <td>${movie.averageRating}</td>
                            </tr>`);
                        });
                    }
                },
                complete: () => {
                    $('#spinner').addClass('hidden');
                }
            }
        );
       
    });
    function findSpecicMovie(movieId) {
        const url = `/rest/movie/${movieId}`;
        // allow spinner to load
        $('#spinner').removeClass('hidden');
        $("#specific-movie").css({ display: 'block' });
        $.ajax(url, {
            success: (movie, status) => {
          
                if (movie) {
                    $(".h2").text(`${movie[0].title}`);
                    $('#genres').append(
                        `${movie[0].genres.map(genres => `<span class="badge badge-${checkGenreType(genres)}">${genres}</span>`).join(' ')}`
                    );
                    movie.forEach(item => {
                        $("#specific-movie ul").append(`
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="row">
                                <div class="col-md-6">
                                    <div class="font-weight-bold w-100">Date</div>
                                    <small>${item.date}</small>
                                </div>
                                 <div class="col-md-6">
                                   <div class="d-flex flex-column align-items-end justify-content-end w-100">
                                    <div class="font-weight-bold">Rating</div>
                                    <small class="badge badge-primary">${item.rating}</small>
                                 </div>
                                </div>
                            </div>
                            </li>
                     `)
                    })
                }
            },
            complete: () => {
                //stop spinner
                $('#spinner').addClass('hidden');
            }
        })
    }
    function checkGenreType(genre){
        switch (genre) {
      case "Action":
        return "danger"
      case "Adventure":
        return "info"
      case "Animation":
        return "success"
      case "Children":
        return "success"
      case "Comedy":
        return "success"
      case "Crime":
        return "info"
      case "Documentary":
        return "secondary"
      case "Drama":
        return "primary"
      case "Fantasy":
        return "secondary"
      case "Film-Noir":
        return "warning"
      case "Horror":
        return "danger"
      case "IMAX":
        return "info"
      case "Musical":
        return "warning"
      case "Mystery":
        return "dark"
      case "Romance":
        return "danger"
      case "Sci-Fi":
        return "dark"
      case "Thriller":
        return "secondary"
      case "War":
        return "dark"
      default:
        return "primary"
    }
    }
</script>